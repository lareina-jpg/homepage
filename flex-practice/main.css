*{
    box-sizing:border-box;
}

img {
    max-width:100%;
}

body {
    margin:0px;
}

.container {
    background:lightblue;
    /* we don't need to set up a width to fill up the width of the screen. it does this automatically as a div element */
    /* height:100% does not equal the height of the browser window, it's just the height of the element's total contents */

    /* vh stands for viewport height */
    height:100vh;
    /* what's causing this extra vertical scroll when you say 100vh? it's the margin around the body. every website has a body margin by default (around 8px). you solve this by creating a rule for the body with a margin:0px; */

    display:flex;
    /* by default, it will organize things as a row, which you will correct with flex-direction */
    flex-direction:column;

    padding:10px;
    gap:10px;
}

.top {
    /* background:yellow; */
    height:25%;
    display:flex;
    flex-direction:row;
    justify-content:space-between;

    /* to create space between the elements, we use gap */
    gap:10px;
}

.top-item {
    background:salmon; 
    width:100%;
    /* flexbox will keep everything in a single line unless we tell it to wrap, so you can make each item 100% size */
    display:flex;
    justify-content:center;
    align-items:center;
}

.bottom {
    /* background:orange; */
    height:75%;
    display:flex;
    gap:10px;
    /* you can add padding:10px; if you want more space around the whole bottom box */
}

.left {
    background:olive; 
    width:50%;
    display:flex;
    justify-content:center;
    align-items:center;
}

.left-item {
    background:pink;
    width:20%;
    height:30%;
    display:flex;
    justify-content:center;
    align-items:center;
}

.right {
    /* background:purple; */
    width:50%;
    display:flex;
    flex-direction:column;
    gap:10px;
}

.right-item {
    background:pink;
    height:100%;
    display:flex;
    justify-content:center;
    align-items:center;
}
